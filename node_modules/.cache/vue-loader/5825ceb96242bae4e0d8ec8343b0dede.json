{"remainingRequest":"/Users/chris/Desktop/thingexplainerchat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chris/Desktop/thingexplainerchat/src/components/simpleChat/ChatBody.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/chris/Desktop/thingexplainerchat/src/components/simpleChat/ChatBody.vue","mtime":1563617949954},{"path":"/Users/chris/Desktop/thingexplainerchat/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/chris/Desktop/thingexplainerchat/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/chris/Desktop/thingexplainerchat/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/chris/Desktop/thingexplainerchat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chris/Desktop/thingexplainerchat/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.chatBodyWrap {\n    width: 100%;\n    margin: 10px 0px;\n    overflow: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n}\n.localMsg {\n    text-align: left;\n    padding: 0.25em;\n}\n.localMsg > div {\n    background: #42b883;\n    color: white;\n    padding: 0.25em 0.6em;\n    font-size: 20px;\n    border-radius: 5px;\n    display: inline-block;\n}\n\n.foreignMsg {\n    text-align: right;\n    padding: 0.25em;\n}\n.foreignMsg > div {\n    background: #e3e3e3;\n    padding: 0.25em 0.6em;\n    font-size: 20px;\n    border-radius: 5px;\n    display: inline-block;\n}\n",{"version":3,"sources":["ChatBody.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChatBody.vue","sourceRoot":"src/components/simpleChat","sourcesContent":["<template>\n    <div class=\"chatBodyWrap\">\n        <div v-for=\"message in totalMsg\" :class=\"message.class\" :key=\"message.id\">\n            <div>{{message.text}}</div>\n        </div>\n    </div>\n</template>\n\n<script>\nlet id = 0;\nexport default {\n    props: [\"msg\"],\n    data() {\n        return {\n            totalMsg: [],\n            test: \"\"\n        };\n    },\n    methods: {\n        clearMessage: function() {\n            this.$emit(\"clearMsg\", \"\");\n        }\n    },\n    watch: {\n        msg: function(newVal) {\n            if (newVal){\n                let newMsg = {text: newVal, class: \"localMsg\", id: id++};\n                this.totalMsg.push(newMsg);\n\n                // *** testing\n                let newMsg2 = {text: newVal, class: \"foreignMsg\", id: id++};\n                this.totalMsg.push(newMsg2);\n                // ***\n\n                this.clearMessage();\n            }\n        }\n    }\n}\n</script>\n\n<style>\n    .chatBodyWrap {\n        width: 100%;\n        margin: 10px 0px;\n        overflow: auto;\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-end;\n    }\n    .localMsg {\n        text-align: left;\n        padding: 0.25em;\n    }\n    .localMsg > div {\n        background: #42b883;\n        color: white;\n        padding: 0.25em 0.6em;\n        font-size: 20px;\n        border-radius: 5px;\n        display: inline-block;\n    }\n\n    .foreignMsg {\n        text-align: right;\n        padding: 0.25em;\n    }\n    .foreignMsg > div {\n        background: #e3e3e3;\n        padding: 0.25em 0.6em;\n        font-size: 20px;\n        border-radius: 5px;\n        display: inline-block;\n    }\n</style>"]}]}