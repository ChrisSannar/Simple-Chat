{"remainingRequest":"/Users/chris/Desktop/thingexplainerchat/node_modules/babel-loader/lib/index.js!/Users/chris/Desktop/thingexplainerchat/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chris/Desktop/thingexplainerchat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chris/Desktop/thingexplainerchat/src/components/simpleChat/SimpleChat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chris/Desktop/thingexplainerchat/src/components/simpleChat/SimpleChat.vue","mtime":1565436936545},{"path":"/Users/chris/Desktop/thingexplainerchat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chris/Desktop/thingexplainerchat/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chris/Desktop/thingexplainerchat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chris/Desktop/thingexplainerchat/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\nimport ChatInput from \"./ChatInput.vue\";\nimport ChatBody from \"./ChatBody.vue\";\nexport default {\n  name: 'SimpleChat',\n  props: [\"name\"],\n  components: {\n    ChatInput: ChatInput,\n    ChatBody: ChatBody\n  },\n  data: function data() {\n    return {\n      text: \"\",\n      username: \"\",\n      displayMain: false,\n      connected: false,\n      test: \"testing\" // *** testing\n\n    };\n  },\n  created: function created() {// this.adjustEditorWindow();\n    // window.onresize = this.adjustEditorWindow;\n  },\n  watch: {\n    // Watch for the username change\n    name: function name(val) {\n      this.username = val;\n    }\n  },\n  methods: {\n    // Adjusts the windows size everytime it opens up\n    adjustEditorWindow: function adjustEditorWindow() {// windowHeight = window.innerHeight;\n      // inputHeight = document.querySelector()\n      // document.querySelector(\".messages\").style.height = (window.innerHeight - 18) + \"px\";\n    },\n    addMessageToBody: function addMessageToBody(event) {\n      this.text = event;\n    },\n    clearMessageToBody: function clearMessageToBody() {\n      this.text = \"\";\n    }\n  },\n  sockets: {\n    connect: function connect() {\n      this.connected = true;\n    },\n    disconnect: function disconnect() {\n      this.connected = false;\n    },\n    temp: function temp(msg) {\n      this.test = msg;\n    }\n  }\n};",{"version":3,"sources":["SimpleChat.vue"],"names":[],"mappings":";;;;;;;;AASA,OAAA,SAAA;AACA,OAAA,QAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA,CAAA,MAAA,CAFA;AAGA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,QAAA,EAAA;AAFA,GAHA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,WAAA,EAAA,KAHA;AAIA,MAAA,SAAA,EAAA,KAJA;AAKA,MAAA,IAAA,EAAA,SALA,CAKA;;AALA,KAAA;AAOA,GAfA;AAgBA,EAAA,OAhBA,qBAgBA,CAEA;AACA;AAEA,GArBA;AAsBA,EAAA,KAAA,EAAA;AAEA;AACA,IAAA,IAAA,EAAA,cAAA,GAAA,EAAA;AACA,WAAA,QAAA,GAAA,GAAA;AACA;AALA,GAtBA;AA6BA,EAAA,OAAA,EAAA;AAEA;AACA,IAAA,kBAAA,EAAA,8BAAA,CACA;AACA;AACA;AACA,KAPA;AAQA,IAAA,gBARA,4BAQA,KARA,EAQA;AACA,WAAA,IAAA,GAAA,KAAA;AACA,KAVA;AAWA,IAAA,kBAXA,gCAWA;AACA,WAAA,IAAA,GAAA,EAAA;AACA;AAbA,GA7BA;AA4CA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,WAAA,SAAA,GAAA,IAAA;AACA,KAHA;AAIA,IAAA,UAJA,wBAIA;AACA,WAAA,SAAA,GAAA,KAAA;AACA,KANA;AAOA,IAAA,IAPA,gBAOA,GAPA,EAOA;AACA,WAAA,IAAA,GAAA,GAAA;AACA;AATA;AA5CA,CAAA","sourcesContent":["<template>\n    <div class=\"wrap\">\n        <h1>{{test}}</h1>\n        <ChatBody class=\"chatBody\" :msg=\"text\" @clearMsg=\"clearMessageToBody\"/>\n        <ChatInput class=\"chatInput\" @submitMessage=\"addMessageToBody\"/>\n    </div>\n</template>\n\n<script>\nimport ChatInput from './ChatInput.vue';\nimport ChatBody from './ChatBody.vue';\n\nexport default {\n    name: 'SimpleChat',\n    props: [\"name\"],\n    components: {\n        ChatInput,\n        ChatBody\n    },\n    data () {\n        return {\n            text: \"\",\n            username: \"\",\n            displayMain: false,\n            connected: false,\n            test: \"testing\" // *** testing\n        }\n    },\n    created() {\n\n        // this.adjustEditorWindow();\n        // window.onresize = this.adjustEditorWindow;\n        \n    },\n    watch: {\n\n        // Watch for the username change\n        name: function (val) {\n            this.username = val;\n        }\n    },\n    methods: {\n\n        // Adjusts the windows size everytime it opens up\n        adjustEditorWindow: function() {\n            // windowHeight = window.innerHeight;\n            // inputHeight = document.querySelector()\n            // document.querySelector(\".messages\").style.height = (window.innerHeight - 18) + \"px\";\n        },\n        addMessageToBody(event) {\n            this.text = event;\n        },\n        clearMessageToBody() {\n            this.text = \"\";\n        }\n    },\n    sockets: {\n        connect() {\n            this.connected = true;\n        },\n        disconnect() {\n            this.connected = false;\n        },\n        temp(msg) {\n            this.test = msg;\n        }\n\n    }\n}\n</script>\n\n<style>\n\n.wrap {\n    margin-top: 3em;\n    display: flex;\n    flex-direction: column;\n    width: 50%;\n    margin: auto;\n    height: 100vh;\n}\n\n.chatBody {\n    height: 85vh;\n}\n\n.chatInput {\n    height: 15vh;\n}\n\n.main {\n    /* display: flex;\n    justify-content: center;\n    align-items: center;\n    background: blue;\n    padding-top: 20%;\n    height: 100%; */\n}\n\n.chat {\n    /* display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    height: 100%; */\n}\n</style>"],"sourceRoot":"src/components/simpleChat"}]}