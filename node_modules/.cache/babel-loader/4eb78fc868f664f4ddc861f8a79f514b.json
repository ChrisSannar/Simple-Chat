{"remainingRequest":"/Users/chris/Desktop/thingexplainerchat/node_modules/babel-loader/lib/index.js!/Users/chris/Desktop/thingexplainerchat/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chris/Desktop/thingexplainerchat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chris/Desktop/thingexplainerchat/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chris/Desktop/thingexplainerchat/src/App.vue","mtime":1569233340831},{"path":"/Users/chris/Desktop/thingexplainerchat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chris/Desktop/thingexplainerchat/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chris/Desktop/thingexplainerchat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chris/Desktop/thingexplainerchat/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Start from \"./components/simpleChat/Start.vue\";\nimport SimpleChat from \"./components/simpleChat/SimpleChat.vue\";\nimport SimpleChatMessage from \"./SimpleChatMessage.js\";\nexport default {\n  name: 'App',\n  components: {\n    Start: Start,\n    SimpleChat: SimpleChat\n  },\n  // ***\n  created: function created() {},\n  // ***\n  data: function data() {\n    return {\n      chatting: false,\n      // *** Allows change between \"Start\" and \"SimpleChat\" for testing\n      username: \"\",\n      // The local and foreign names and socket ids respectively\n      pairUsername: \"\",\n      socketId: null,\n      pairSocketId: null,\n      connected: false,\n      temp: null // test: [\"a\", \"b\", \"c\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\"]\n\n    };\n  },\n  methods: {\n    startChat: function startChat(val) {\n      // Set all the new info\n      this.username = val[0];\n      this.pairUsername = val[2];\n      this.pairSocketId = val[1]; // Then swap to the new chatting screen\n\n      this.chatting = true;\n    },\n    chatterLeft: function chatterLeft() {\n      this.chatting = false;\n    }\n  },\n  sockets: {\n    connect: function connect(data) {\n      this.connected = true;\n    },\n    disconnect: function disconnect() {\n      this.connected = false;\n    },\n    // When the socket channel is established, get the ID tied to the particular channel\n    init: function init(data) {\n      this.socketId = data;\n    }\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAmBA,OAAA,KAAA;AACA,OAAA,UAAA;AAEA,OAAA,iBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,KAAA,EAAA,KADA;AAEA,IAAA,UAAA,EAAA;AAFA,GAFA;AAMA;AACA,EAAA,OAPA,qBAOA,CAEA,CATA;AAUA;AACA,EAAA,IAXA,kBAWA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,KADA;AACA;AACA,MAAA,QAAA,EAAA,EAFA;AAEA;AACA,MAAA,YAAA,EAAA,EAHA;AAIA,MAAA,QAAA,EAAA,IAJA;AAKA,MAAA,YAAA,EAAA,IALA;AAMA,MAAA,SAAA,EAAA,KANA;AAOA,MAAA,IAAA,EAAA,IAPA,CAQA;;AARA,KAAA;AAUA,GAtBA;AAuBA,EAAA,OAAA,EAAA;AACA,IAAA,SAAA,EAAA,mBAAA,GAAA,EAAA;AAEA;AACA,WAAA,QAAA,GAAA,GAAA,CAAA,CAAA,CAAA;AACA,WAAA,YAAA,GAAA,GAAA,CAAA,CAAA,CAAA;AACA,WAAA,YAAA,GAAA,GAAA,CAAA,CAAA,CAAA,CALA,CAOA;;AACA,WAAA,QAAA,GAAA,IAAA;AACA,KAVA;AAYA,IAAA,WAAA,EAAA,uBAAA;AACA,WAAA,QAAA,GAAA,KAAA;AACA;AAdA,GAvBA;AAwCA,EAAA,OAAA,EAAA;AAEA,IAAA,OAFA,mBAEA,IAFA,EAEA;AACA,WAAA,SAAA,GAAA,IAAA;AACA,KAJA;AAKA,IAAA,UALA,wBAKA;AACA,WAAA,SAAA,GAAA,KAAA;AACA,KAPA;AASA;AACA,IAAA,IAVA,gBAUA,IAVA,EAUA;AACA,WAAA,QAAA,GAAA,IAAA;AACA;AAZA;AAxCA,CAAA","sourcesContent":["<template>\n  <div id=\"app\">\n    <Start \n      ref=\"start\"\n      v-if=\"!chatting\" \n      @startChat=\"startChat\" \n      :socketId=\"socketId\"\n      :pairSocketId=\"pairSocketId\"/>\n    <SimpleChat \n      v-if=\"chatting\" \n      @left=\"chatterLeft\"\n      :name=\"username\"\n      :foreignName=\"pairUsername\"\n      :socketId=\"socketId\" \n      :foreignSocketId=\"pairSocketId\"/>\n  </div>\n</template>\n\n<script>\nimport Start from './components/simpleChat/Start.vue';\nimport SimpleChat from './components/simpleChat/SimpleChat.vue';\n\nimport SimpleChatMessage from './SimpleChatMessage.js';\n\nexport default {\n  name: 'App',\n  components: {\n    Start,\n    SimpleChat\n  },\n  // ***\n  created() {\n\n  },\n  // ***\n  data() {\n    return {\n      chatting: false,    // *** Allows change between \"Start\" and \"SimpleChat\" for testing\n      username: \"\",       // The local and foreign names and socket ids respectively\n      pairUsername: \"\",\n      socketId: null,\n      pairSocketId: null,\n      connected: false,\n      temp: null\n      // test: [\"a\", \"b\", \"c\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\"]\n    }\n  },\n  methods: {\n    startChat: function(val) {\n\n      // Set all the new info\n      this.username = val[0];\n      this.pairUsername = val[2];\n      this.pairSocketId = val[1];\n\n      // Then swap to the new chatting screen\n      this.chatting = true;\n    },\n\n    chatterLeft: function() {\n      this.chatting = false;\n    }\n\n  },\n  sockets: {\n\n    connect(data) {\n      this.connected = true;\n    },\n    disconnect() {\n      this.connected = false;\n    },\n\n    // When the socket channel is established, get the ID tied to the particular channel\n    init(data) {\n      this.socketId = data;\n    }\n  }\n}\n</script>\n\n<style>\n/* #app {\n  height: 500px;\n  background: yellow;\n  display: flex;\n  flex-direction: column-reverse;\n  align-content: flex-end;\n} */\n</style>\n"],"sourceRoot":"src"}]}