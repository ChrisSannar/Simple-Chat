{"remainingRequest":"/Users/chris/Desktop/thingexplainerchat/node_modules/babel-loader/lib/index.js!/Users/chris/Desktop/thingexplainerchat/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chris/Desktop/thingexplainerchat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chris/Desktop/thingexplainerchat/src/components/simpleChat/ChatBody.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chris/Desktop/thingexplainerchat/src/components/simpleChat/ChatBody.vue","mtime":1559300643834},{"path":"/Users/chris/Desktop/thingexplainerchat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chris/Desktop/thingexplainerchat/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chris/Desktop/thingexplainerchat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chris/Desktop/thingexplainerchat/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\nvar id = 0;\nexport default {\n  props: [\"msg\"],\n  data: function data() {\n    return {\n      totalMsg: [],\n      test: \"\"\n    };\n  },\n  methods: {\n    clearMessage: function clearMessage() {\n      this.$emit(\"clearMsg\", \"\");\n    }\n  },\n  watch: {\n    msg: function msg(newVal) {\n      if (newVal) {\n        var newMsg = {\n          text: newVal,\n          class: \"localMsg\",\n          id: id++\n        };\n        this.totalMsg.push(newMsg);\n        this.clearMessage();\n      }\n    }\n  }\n};",{"version":3,"sources":["ChatBody.vue"],"names":[],"mappings":";;;;;;;;AASA,IAAA,EAAA,GAAA,CAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,KAAA,CADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAAA;AAIA,GAPA;AAQA,EAAA,OAAA,EAAA;AACA,IAAA,YAAA,EAAA,wBAAA;AACA,WAAA,KAAA,CAAA,UAAA,EAAA,EAAA;AACA;AAHA,GARA;AAaA,EAAA,KAAA,EAAA;AACA,IAAA,GAAA,EAAA,aAAA,MAAA,EAAA;AACA,UAAA,MAAA,EAAA;AACA,YAAA,MAAA,GAAA;AAAA,UAAA,IAAA,EAAA,MAAA;AAAA,UAAA,KAAA,EAAA,UAAA;AAAA,UAAA,EAAA,EAAA,EAAA;AAAA,SAAA;AACA,aAAA,QAAA,CAAA,IAAA,CAAA,MAAA;AACA,aAAA,YAAA;AACA;AACA;AAPA;AAbA,CAAA","sourcesContent":["<template>\n    <div class=\"chatBodyWrap\">\n        <div v-for=\"message in totalMsg\" :class=\"message.class\" :key=\"message.id\">\n            <span>{{message.text}}</span>\n        </div>\n    </div>\n</template>\n\n<script>\nlet id = 0;\nexport default {\n    props: [\"msg\"],\n    data() {\n        return {\n            totalMsg: [],\n            test: \"\"\n        };\n    },\n    methods: {\n        clearMessage: function() {\n            this.$emit(\"clearMsg\", \"\");\n        }\n    },\n    watch: {\n        msg: function(newVal) {\n            if (newVal){\n                let newMsg = {text: newVal, class: \"localMsg\", id: id++};\n                this.totalMsg.push(newMsg);\n                this.clearMessage();\n            }\n        }\n    }\n}\n</script>\n\n<style>\n    .chatBodyWrap {\n        margin: 10px 0px;\n    }\n    .localMsg {\n        text-align: left;\n        padding: 0.25em;\n        margin: 5px;\n    }\n    .localMsg > span {\n        background: #42b883;\n        color: white;\n        padding: 0.25em 0.6em;\n        font-size: 20px;\n        border-radius: 5px;\n        \n    }\n</style>"],"sourceRoot":"src/components/simpleChat"}]}