{"remainingRequest":"/Users/chris/Desktop/thingexplainerchat/node_modules/babel-loader/lib/index.js!/Users/chris/Desktop/thingexplainerchat/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chris/Desktop/thingexplainerchat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chris/Desktop/thingexplainerchat/src/components/simpleChat/ChatBody.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chris/Desktop/thingexplainerchat/src/components/simpleChat/ChatBody.vue","mtime":1564567641002},{"path":"/Users/chris/Desktop/thingexplainerchat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chris/Desktop/thingexplainerchat/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chris/Desktop/thingexplainerchat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chris/Desktop/thingexplainerchat/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar id = 0;\nexport default {\n  props: [\"msg\"],\n  data: function data() {\n    return {\n      totalMsg: []\n    };\n  },\n  updated: function updated() {\n    var container = this.$refs.box;\n    container.scrollTop = container.scrollHeight;\n  },\n  methods: {\n    clearMessage: function clearMessage() {\n      this.$emit(\"clearMsg\", \"\");\n    }\n  },\n  watch: {\n    msg: function msg(newVal) {\n      if (newVal) {\n        var newMsg = {\n          text: newVal,\n          class: \"localMsg msg\",\n          user: \"dude\",\n          id: id++\n        };\n        this.totalMsg.push(newMsg); // *** testing\n\n        var newMsg2 = {\n          text: newVal,\n          class: \"foreignMsg msg\",\n          user: \"foreign\",\n          id: id++\n        };\n        this.totalMsg.push(newMsg2); // ***\n\n        this.clearMessage();\n      }\n    }\n  }\n};",{"version":3,"sources":["ChatBody.vue"],"names":[],"mappings":";;;;;;;;;;;AAYA,IAAA,EAAA,GAAA,CAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,KAAA,CADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAPA,qBAOA;AACA,QAAA,SAAA,GAAA,KAAA,KAAA,CAAA,GAAA;AACA,IAAA,SAAA,CAAA,SAAA,GAAA,SAAA,CAAA,YAAA;AACA,GAVA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,YAAA,EAAA,wBAAA;AACA,WAAA,KAAA,CAAA,UAAA,EAAA,EAAA;AACA;AAHA,GAXA;AAgBA,EAAA,KAAA,EAAA;AACA,IAAA,GAAA,EAAA,aAAA,MAAA,EAAA;AACA,UAAA,MAAA,EAAA;AACA,YAAA,MAAA,GAAA;AAAA,UAAA,IAAA,EAAA,MAAA;AAAA,UAAA,KAAA,EAAA,cAAA;AAAA,UAAA,IAAA,EAAA,MAAA;AAAA,UAAA,EAAA,EAAA,EAAA;AAAA,SAAA;AACA,aAAA,QAAA,CAAA,IAAA,CAAA,MAAA,EAFA,CAIA;;AACA,YAAA,OAAA,GAAA;AAAA,UAAA,IAAA,EAAA,MAAA;AAAA,UAAA,KAAA,EAAA,gBAAA;AAAA,UAAA,IAAA,EAAA,SAAA;AAAA,UAAA,EAAA,EAAA,EAAA;AAAA,SAAA;AACA,aAAA,QAAA,CAAA,IAAA,CAAA,OAAA,EANA,CAOA;;AAEA,aAAA,YAAA;AACA;AACA;AAbA;AAhBA,CAAA","sourcesContent":["<template>\n    <div ref=\"box\" class=\"boxWrap\">\n        <div class=\"chatBodyWrap\">\n            <div v-for=\"message in totalMsg\" :class=\"message.class\" :key=\"message.id\">\n                <div>{{message.text}}</div>\n                <p>{{message.user}}</p>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nlet id = 0;\nexport default {\n    props: [\"msg\"],\n    data() {\n        return {\n            totalMsg: [],\n        };\n    },\n    updated() {\n        var container = this.$refs.box;\n        container.scrollTop = container.scrollHeight;\n    },\n    methods: {\n        clearMessage: function() {\n            this.$emit(\"clearMsg\", \"\");\n        }\n    },\n    watch: {\n        msg: function(newVal) {\n            if (newVal){\n                let newMsg = {text: newVal, class: \"localMsg msg\", user: \"dude\", id: id++};\n                this.totalMsg.push(newMsg);\n\n                // *** testing\n                let newMsg2 = {text: newVal, class: \"foreignMsg msg\", user: \"foreign\", id: id++};\n                this.totalMsg.push(newMsg2);\n                // ***\n\n                this.clearMessage();\n            }\n        }\n    }\n}\n</script>\n\n<style>\n    .boxWrap {\n        flex: 1;\n        display: flex;\n        overflow: auto;\n        width: 105%;\n    }\n    .chatBodyWrap {\n        width: 100%;\n        margin: 10px 0px;\n        overflow-y: scroll;\n        display: flex;\n        min-height: min-content;\n        flex-direction: column;\n        justify-content: flex-end;\n    }\n    .msg {\n        padding: 0.25em;\n        font-family: system-ui;\n    }\n    .msg > div {\n        display: inline-block;\n        padding: 0.25em 0.6em;\n        font-size: 20px;\n        border-radius: 5px;\n    }\n    .msg > p {\n        margin: 0;\n        font-size: 10px;\n        color: #333333;\n    }\n    .localMsg {\n        text-align: left;\n    }\n    .localMsg > div {\n        background: #42b883;\n        color: white;\n    }\n    .foreignMsg {\n        text-align: right;\n    }\n    .foreignMsg > div {\n        background: #e3e3e3;\n        color: #333333;\n    }\n</style>"],"sourceRoot":"src/components/simpleChat"}]}